//------------------------------------------------
//--- 010 Editor v10.0.2 Binary Template
//
//  File: OrochiDAT.bt
//  Authors: SeleDreams
//  Version: 0.1
//  Purpose: Analyzing Silicon Studio's Orochi / Mizuchi Engine data archiving format
//  Category: Archive
//  File Mask: GxArchivedFile???.dat
//  ID Bytes: 47 44 41 54
//  History: 
//  0.1     2020-05-06  SeleDreams: Initial Release
//------------------------------------------------

typedef struct{
        LittleEndian();
        uint Offset;
        uint Length;
 } GDATFileDef;


typedef struct {
    BigEndian();
    char MAGIC[4];
    LittleEndian();
    int FileCount;
    GDATFileDef File_Definitions[FileCount];
} GDATHeader;


/** 
*  - This structure is an array containing all the files in the order of their definition.
*  - I've added it this way to avoid a mess where all the files are listed at the root of the inspector.
**/
typedef struct{
    local int i = 0;
    for (i = 0; i < File.Header.FileCount; i++){
        Printf("Added %d files to the array...\n",i+1);
        struct{
            byte Data[File.Header.File_Definitions[i].Length];
        } GDATFile;
    }
} GDATFiles;


typedef struct {
    GDATHeader Header;
    GDATFiles Files;
} GDAT <read=DisplayFilesCount>;


string DisplayFilesCount(GDAT &input){
    string s;
    SPrintf(s,"%d Files",input.Header.FileCount);
    return s;
}

GDAT File;
Printf("%d Files were found in this GDAT file\n", File.Header.FileCount);





